{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/create-react-blog-with-gatsby-template-1","result":{"data":{"markdownRemark":{"id":"50a61013-cd43-575e-846b-fc6e11fdb864","html":"<ul>\n<li><a href=\"/posts/create-react-blog-with-gatsby-template-0\">리액트 + Gatsby 를 이용한 블로그 만들기_#0</a></li>\n<li><a href=\"/posts/create-react-blog-with-gatsby-template-1\">리액트 + Gatsby 를 이용한 블로그 만들기_#1</a></li>\n<li><a href=\"/posts/create-react-blog-with-gatsby-template-2\">리액트 + Gatsby 를 이용한 블로그 만들기_#2</a></li>\n<li><a href=\"/posts/create-react-blog-with-gatsby-template-3\">리액트 + Gatsby 를 이용한 블로그 만들기_#3</a></li>\n<li><a href=\"/posts/create-react-blog-with-gatsby-template-final\">리액트 + Gatsby 를 이용한 블로그 만들기_final</a></li>\n</ul>\n<p>React에 검색엔진 최적화(이하 SEO)와 SNS 공유를 위한 meta 태그 설정하는 방법 중 필자가 편하게 이용한 방법(Pre-render) 및 현재 블로그를 만들 수 있게 된 Gatsby 등(SSR - Server Side Rendering)에 대해 설명하겠다.</p>\n<p>설명에 앞서 SPA, Pre-render 와 SSR(Server-Side-Rendering)은 무엇일까?</p>\n<h2 id=\"spa\" style=\"position:relative;\"><a href=\"#spa\" aria-label=\"spa permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SPA</h2>\n<p>React는 SPA(Single Page Application)을 지향한다. </p>\n<p>SPA는 Single Page Application의 줄임말이며, 라우팅을 클라이언트에서 담당한다.</p>\n<p>기존의 경우 사용자가 라우팅을 요청할 때 마다 서버측에 새로운 페이지를 받아와야해서 서버측 자원이 많이 이용된다. 그에 따른 불필요한 트래픽이 빈번히 발생한다. 따라서 SPA를 이용할 시 앞서 말한 문제점들이 개선된다.</p>\n<p>하지만 SPA도 문제점은 존재한다.</p>\n<ol>\n<li>\n<p>앱의 규모가 커지면 JS 파일의 크기가 너무 커질 수 있다.</p>\n<ul>\n<li>코드 스플리팅(Code Splitting)을 통해 해결 가능하다.</li>\n</ul>\n</li>\n<li>\n<p>브라우저에서 Javascript를 지원하지 않는 경우 구동되지 않아 UI를 볼 수 없다. 따라서 검색엔진에서 크롤링이 불가능하다.</p>\n<ul>\n<li>Pre-render, SSR(Server Side Rendering)으로 해결 가능하다.</li>\n<li>구글은 js엔진이 내장되어있어 SPA에도 SEO가 잘 적용된다.</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"pre-render\" style=\"position:relative;\"><a href=\"#pre-render\" aria-label=\"pre render permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pre-render</h2>\n<p>웹 크롤러가 볼 수 있도록 페이지의 모든 요소를 사전에 미리 로드하는 프로세스를 의미한다.\nSEO를 위해 SSR을 이용하기 힘드신 분들을 위해 추천하는 기능이다.</p>\n<p>구글링 하다보면 많은 prereder 라이브러리 등이 존재한다. 그 중 필자가 추천하는 방법은 다음과 같다.</p>\n<ol>\n<li>\n<p><a href=\"https://github.com/stereobooster/react-snap\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">react-snap</a></p>\n<ul>\n<li>해당 라이브러리는 React에서 랜더링되는 페이지를 html파일로 미리 저장하여 제공한다.</li>\n<li>\n<p>앱을 빌드 후에 snap을 찍어야한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token comment\">// package.json</span>\n<span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> ...생략<span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"postbuild\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"react-snap\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://prerender.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">prerender.io</a></p>\n<ul>\n<li>해당 사이트는 리액트 코드를 문자열 형태로 변환을 하는게 아니라, 아예 자바스크립트 렌더링 엔진을 가지고 있어서, 자바스크립트 코드를 실행시켜 뷰를 렌더링한 결과값을 반환한다. 렌더링 속도는 그렇게 빠르지 않기 때문에, 이 서비스는 오직 SEO를 위해서만 사용된다. 크롤러 봇일 경우에만 대신 렌더링을 해줘서 반환을 해준다.</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"ssr-server-side-rendering\" style=\"position:relative;\"><a href=\"#ssr-server-side-rendering\" aria-label=\"ssr server side rendering permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SSR (Server Side Rendering)</h2>\n<p>서버사이드 렌더링을 통하여 얻을 수 있는 가장 큰 이점은 SEO이다. 리액트, 혹은 다른 자바스크립트 라이브러리/프레임워크로 만들어져 뷰 렌더링이 자바스크립트 위주로 돌아가는 프로젝트는, 자바스크립트 엔진이 돌아가지 않으면 원하는 정보를 표시해주지 않는다.</p>\n<p>SSR은 첫 렌더링된 html 을 클라이언트에게 전달을 해주기때문에 초기로딩속도를 많이 줄여줄 수 있다. 자바스크립트 파일을 불러오고, 렌더링 작업이 완료되기 전에도, 유저가 사이트의 컨텐츠를 이용 할 수 있게 된다.</p>\n<p>SSR은 다양한 서버 프레임워크로 동작 가능하다. 예를 들면 Koa, Next 그리고 필자가 사용하는 Gatsby(?)가 있다.</p>\n<h2 id=\"getsbyjs\" style=\"position:relative;\"><a href=\"#getsbyjs\" aria-label=\"getsbyjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://gatsbyjs.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Getsby.js</a></h2>\n<p>Gatsby.js는 React 기반에 GraphQL에 사이트 정보를 저장하며 정적 사이트 생성기이다.</p>\n<p>Gatsby.js는 React, Webpack, react-router, GraphQL 등 프론트 엔드 도구를 종합적으로 제공한다.</p>\n<p>그리고 gatsby에 특화된 plugin들이 많아 어려운 설정 없이 손쉽게 plugin들을 사용할 수 있다.</p>\n<h2 id=\"gatsbyjs-설치\" style=\"position:relative;\"><a href=\"#gatsbyjs-%EC%84%A4%EC%B9%98\" aria-label=\"gatsbyjs 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gatsby.js 설치</h2>\n<p>Gatsby.js는 npm을 통해 설치 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save gatsby-cli</code></pre></div>\n<p>프로젝트 생성은 다음 명령어를 사용하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">gatsby new <span class=\"token punctuation\">[</span>프로젝트명<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>템플릿<span class=\"token punctuation\">]</span>\ngatsby new gatsby-site https://github.com/gatsbyjs/gatsby-starter-hello-world</code></pre></div>\n<p>템플릿 정보는 있어도 되고 없어도 된다.</p>\n<p>현재 블로그의 템플릿은 <a href=\"https://github.com/alxshelepenok/gatsby-starter-lumen\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/alxshelepenok/gatsby-starter-lumen</a> 이다.</p>\n<p>기초적인 Gatsby.js의 사용법은 다음 포스트에서 계속…</p>\n<h5 id=\"출처-및-참조\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EC%B2%98-%EB%B0%8F-%EC%B0%B8%EC%A1%B0\" aria-label=\"출처 및 참조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출처 및 참조</h5>\n<ul>\n<li><a href=\"https://blog.naver.com/yjdev/222087089670\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SEO 관련 정보 - yjdev(Naver Blog)</a></li>\n<li><a href=\"https://velopert.com/3425\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">prerender.io, SSR 관련 정보 - velopert(VELOPERT.LOG)</a></li>\n<li><a href=\"https://emessell.github.io/react/2019/10/30/SSR,CSR/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SSR, Next.js 관련 정보 - emessell(Blog)</a></li>\n</ul>","fields":{"slug":"/posts/create-react-blog-with-gatsby-template-1","tagSlugs":["/tag/web-development/","/tag/blog/","/tag/react/","/tag/seo/","/tag/ssr/","/tag/server-side-rendering/","/tag/gatsby/"]},"frontmatter":{"date":"2020-10-02T00:37:37.000Z","description":"SEO를 지원하는 블로그를 위해 리액트 + Gatsby 이용하여 블로그를 만들자. #1, Gatsby를 쓰는 이유!","tags":["Web Development","Blog","React","SEO","SSR","Server Side Rendering","Gatsby"],"title":"리액트 + Gatsby 를 이용한 블로그 만들기_#1","socialImage":{"publicURL":"/static/1b703608bc525e55e35d867d2cdd4a49/gatsby_react.png"}}}},"pageContext":{"slug":"/posts/create-react-blog-with-gatsby-template-1"}},"staticQueryHashes":["1118307107","251939775","401334301"]}